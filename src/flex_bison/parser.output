Terminals unused in grammar

    PASS


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: %empty
    3           | statements statement

    4 statement: EOL statement
    5          | compound
    6          | expression EOL
    7          | RETURN expression EOL
    8          | RAISE expression EOL

    9 compound: definition
   10         | conditional

   11 block: COL EOL INDENT statements DEDENT

   12 definition: DEF names block

   13 names: NAME
   14      | names NAME

   15 conditional: IF expression block
   16            | IF expression ELSE block
   17            | IF expression ELSE conditional

   18 expression: application
   19           | value

   20 application: NAME values

   21 values: value
   22       | values value

   23 value: INT
   24      | FLOAT
   25      | STRING
   26      | NAME
   27      | LPAR expression RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INDENT (258) 11
    DEDENT (259) 11
    EOL (260) 4 6 7 8 11
    COL (261) 11
    LPAR (262) 27
    RPAR (263) 27
    INT (264) 23
    FLOAT (265) 24
    NAME (266) 13 14 20 26
    STRING (267) 25
    PASS (268)
    DEF (269) 12
    IF (270) 15 16 17
    ELSE (271) 16 17
    RAISE (272) 8
    RETURN (273) 7


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    program (20)
        on left: 1
        on right: 0
    statements (21)
        on left: 2 3
        on right: 1 3 11
    statement (22)
        on left: 4 5 6 7 8
        on right: 3 4
    compound (23)
        on left: 9 10
        on right: 5
    block (24)
        on left: 11
        on right: 12 15 16
    definition (25)
        on left: 12
        on right: 9
    names (26)
        on left: 13 14
        on right: 12 14
    conditional (27)
        on left: 15 16 17
        on right: 10 17
    expression (28)
        on left: 18 19
        on right: 6 7 8 15 16 17 27
    application (29)
        on left: 20
        on right: 18
    values (30)
        on left: 21 22
        on right: 20 22
    value (31)
        on left: 23 24 25 26 27
        on right: 19 21 22


State 0

    0 $accept: . program $end
    1 program: . statements
    2 statements: . %empty
    3           | . statements statement

    $default  reduce using rule 2 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .  [$end]
    3 statements: statements . statement
    4 statement: . EOL statement
    5          | . compound
    6          | . expression EOL
    7          | . RETURN expression EOL
    8          | . RAISE expression EOL
    9 compound: . definition
   10         | . conditional
   12 definition: . DEF names block
   15 conditional: . IF expression block
   16            | . IF expression ELSE block
   17            | . IF expression ELSE conditional
   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    EOL     shift, and go to state 4
    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9
    DEF     shift, and go to state 10
    IF      shift, and go to state 11
    RAISE   shift, and go to state 12
    RETURN  shift, and go to state 13

    $default  reduce using rule 1 (program)

    statement    go to state 14
    compound     go to state 15
    definition   go to state 16
    conditional  go to state 17
    expression   go to state 18
    application  go to state 19
    value        go to state 20


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 statement: . EOL statement
    4          | EOL . statement
    5          | . compound
    6          | . expression EOL
    7          | . RETURN expression EOL
    8          | . RAISE expression EOL
    9 compound: . definition
   10         | . conditional
   12 definition: . DEF names block
   15 conditional: . IF expression block
   16            | . IF expression ELSE block
   17            | . IF expression ELSE conditional
   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    EOL     shift, and go to state 4
    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9
    DEF     shift, and go to state 10
    IF      shift, and go to state 11
    RAISE   shift, and go to state 12
    RETURN  shift, and go to state 13

    statement    go to state 21
    compound     go to state 15
    definition   go to state 16
    conditional  go to state 17
    expression   go to state 18
    application  go to state 19
    value        go to state 20


State 5

   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR
   27      | LPAR . expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9

    expression   go to state 22
    application  go to state 19
    value        go to state 20


State 6

   23 value: INT .

    $default  reduce using rule 23 (value)


State 7

   24 value: FLOAT .

    $default  reduce using rule 24 (value)


State 8

   20 application: NAME . values
   21 values: . value
   22       | . values value
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   26      | NAME .  [EOL, COL, RPAR, ELSE]
   27      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 23
    STRING  shift, and go to state 9

    $default  reduce using rule 26 (value)

    values  go to state 24
    value   go to state 25


State 9

   25 value: STRING .

    $default  reduce using rule 25 (value)


State 10

   12 definition: DEF . names block
   13 names: . NAME
   14      | . names NAME

    NAME  shift, and go to state 26

    names  go to state 27


State 11

   15 conditional: IF . expression block
   16            | IF . expression ELSE block
   17            | IF . expression ELSE conditional
   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9

    expression   go to state 28
    application  go to state 19
    value        go to state 20


State 12

    8 statement: RAISE . expression EOL
   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9

    expression   go to state 29
    application  go to state 19
    value        go to state 20


State 13

    7 statement: RETURN . expression EOL
   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9

    expression   go to state 30
    application  go to state 19
    value        go to state 20


State 14

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 15

    5 statement: compound .

    $default  reduce using rule 5 (statement)


State 16

    9 compound: definition .

    $default  reduce using rule 9 (compound)


State 17

   10 compound: conditional .

    $default  reduce using rule 10 (compound)


State 18

    6 statement: expression . EOL

    EOL  shift, and go to state 31


State 19

   18 expression: application .

    $default  reduce using rule 18 (expression)


State 20

   19 expression: value .

    $default  reduce using rule 19 (expression)


State 21

    4 statement: EOL statement .

    $default  reduce using rule 4 (statement)


State 22

   27 value: LPAR expression . RPAR

    RPAR  shift, and go to state 32


State 23

   26 value: NAME .

    $default  reduce using rule 26 (value)


State 24

   20 application: NAME values .  [EOL, COL, RPAR, ELSE]
   22 values: values . value
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 23
    STRING  shift, and go to state 9

    $default  reduce using rule 20 (application)

    value  go to state 33


State 25

   21 values: value .

    $default  reduce using rule 21 (values)


State 26

   13 names: NAME .

    $default  reduce using rule 13 (names)


State 27

   11 block: . COL EOL INDENT statements DEDENT
   12 definition: DEF names . block
   14 names: names . NAME

    COL   shift, and go to state 34
    NAME  shift, and go to state 35

    block  go to state 36


State 28

   11 block: . COL EOL INDENT statements DEDENT
   15 conditional: IF expression . block
   16            | IF expression . ELSE block
   17            | IF expression . ELSE conditional

    COL   shift, and go to state 34
    ELSE  shift, and go to state 37

    block  go to state 38


State 29

    8 statement: RAISE expression . EOL

    EOL  shift, and go to state 39


State 30

    7 statement: RETURN expression . EOL

    EOL  shift, and go to state 40


State 31

    6 statement: expression EOL .

    $default  reduce using rule 6 (statement)


State 32

   27 value: LPAR expression RPAR .

    $default  reduce using rule 27 (value)


State 33

   22 values: values value .

    $default  reduce using rule 22 (values)


State 34

   11 block: COL . EOL INDENT statements DEDENT

    EOL  shift, and go to state 41


State 35

   14 names: names NAME .

    $default  reduce using rule 14 (names)


State 36

   12 definition: DEF names block .

    $default  reduce using rule 12 (definition)


State 37

   11 block: . COL EOL INDENT statements DEDENT
   15 conditional: . IF expression block
   16            | . IF expression ELSE block
   16            | IF expression ELSE . block
   17            | . IF expression ELSE conditional
   17            | IF expression ELSE . conditional

    COL  shift, and go to state 34
    IF   shift, and go to state 11

    block        go to state 42
    conditional  go to state 43


State 38

   15 conditional: IF expression block .

    $default  reduce using rule 15 (conditional)


State 39

    8 statement: RAISE expression EOL .

    $default  reduce using rule 8 (statement)


State 40

    7 statement: RETURN expression EOL .

    $default  reduce using rule 7 (statement)


State 41

   11 block: COL EOL . INDENT statements DEDENT

    INDENT  shift, and go to state 44


State 42

   16 conditional: IF expression ELSE block .

    $default  reduce using rule 16 (conditional)


State 43

   17 conditional: IF expression ELSE conditional .

    $default  reduce using rule 17 (conditional)


State 44

    2 statements: . %empty
    3           | . statements statement
   11 block: COL EOL INDENT . statements DEDENT

    $default  reduce using rule 2 (statements)

    statements  go to state 45


State 45

    3 statements: statements . statement
    4 statement: . EOL statement
    5          | . compound
    6          | . expression EOL
    7          | . RETURN expression EOL
    8          | . RAISE expression EOL
    9 compound: . definition
   10         | . conditional
   11 block: COL EOL INDENT statements . DEDENT
   12 definition: . DEF names block
   15 conditional: . IF expression block
   16            | . IF expression ELSE block
   17            | . IF expression ELSE conditional
   18 expression: . application
   19           | . value
   20 application: . NAME values
   23 value: . INT
   24      | . FLOAT
   25      | . STRING
   26      | . NAME
   27      | . LPAR expression RPAR

    DEDENT  shift, and go to state 46
    EOL     shift, and go to state 4
    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9
    DEF     shift, and go to state 10
    IF      shift, and go to state 11
    RAISE   shift, and go to state 12
    RETURN  shift, and go to state 13

    statement    go to state 14
    compound     go to state 15
    definition   go to state 16
    conditional  go to state 17
    expression   go to state 18
    application  go to state 19
    value        go to state 20


State 46

   11 block: COL EOL INDENT statements DEDENT .

    $default  reduce using rule 11 (block)
