Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: %empty
    3           | statements statement

    4 statement: EOL
    5          | block
    6          | expression EOL
    7          | PASS EOL

    8 block: head COL body

    9 head: DEF names
   10     | IF expression

   11 names: NAME
   12      | names NAME

   13 body: statement
   14     | EOL INDENT statements DEDENT

   15 expression: application
   16           | value

   17 application: NAME values

   18 values: value
   19       | values value

   20 value: INT
   21      | FLOAT
   22      | STRING
   23      | NAME
   24      | LPAR expression RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INDENT (258) 14
    DEDENT (259) 14
    EOL (260) 4 6 7 14
    COL (261) 8
    LPAR (262) 24
    RPAR (263) 24
    INT (264) 20
    FLOAT (265) 21
    NAME (266) 11 12 17 23
    STRING (267) 22
    PASS (268) 7
    DEF (269) 9
    IF (270) 10


Nonterminals, with rules where they appear

    $accept (16)
        on left: 0
    program (17)
        on left: 1
        on right: 0
    statements (18)
        on left: 2 3
        on right: 1 3 14
    statement (19)
        on left: 4 5 6 7
        on right: 3 13
    block (20)
        on left: 8
        on right: 5
    head (21)
        on left: 9 10
        on right: 8
    names (22)
        on left: 11 12
        on right: 9 12
    body (23)
        on left: 13 14
        on right: 8
    expression (24)
        on left: 15 16
        on right: 6 10 24
    application (25)
        on left: 17
        on right: 15
    values (26)
        on left: 18 19
        on right: 17 19
    value (27)
        on left: 20 21 22 23 24
        on right: 16 18 19


State 0

    0 $accept: . program $end
    1 program: . statements
    2 statements: . %empty
    3           | . statements statement

    $default  reduce using rule 2 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statements .  [$end]
    3 statements: statements . statement
    4 statement: . EOL
    5          | . block
    6          | . expression EOL
    7          | . PASS EOL
    8 block: . head COL body
    9 head: . DEF names
   10     | . IF expression
   15 expression: . application
   16           | . value
   17 application: . NAME values
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   24      | . LPAR expression RPAR

    EOL     shift, and go to state 4
    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9
    PASS    shift, and go to state 10
    DEF     shift, and go to state 11
    IF      shift, and go to state 12

    $default  reduce using rule 1 (program)

    statement    go to state 13
    block        go to state 14
    head         go to state 15
    expression   go to state 16
    application  go to state 17
    value        go to state 18


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 statement: EOL .

    $default  reduce using rule 4 (statement)


State 5

   15 expression: . application
   16           | . value
   17 application: . NAME values
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   24      | . LPAR expression RPAR
   24      | LPAR . expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9

    expression   go to state 19
    application  go to state 17
    value        go to state 18


State 6

   20 value: INT .

    $default  reduce using rule 20 (value)


State 7

   21 value: FLOAT .

    $default  reduce using rule 21 (value)


State 8

   17 application: NAME . values
   18 values: . value
   19       | . values value
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   23      | NAME .  [EOL, COL, RPAR]
   24      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 20
    STRING  shift, and go to state 9

    $default  reduce using rule 23 (value)

    values  go to state 21
    value   go to state 22


State 9

   22 value: STRING .

    $default  reduce using rule 22 (value)


State 10

    7 statement: PASS . EOL

    EOL  shift, and go to state 23


State 11

    9 head: DEF . names
   11 names: . NAME
   12      | . names NAME

    NAME  shift, and go to state 24

    names  go to state 25


State 12

   10 head: IF . expression
   15 expression: . application
   16           | . value
   17 application: . NAME values
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   24      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9

    expression   go to state 26
    application  go to state 17
    value        go to state 18


State 13

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 14

    5 statement: block .

    $default  reduce using rule 5 (statement)


State 15

    8 block: head . COL body

    COL  shift, and go to state 27


State 16

    6 statement: expression . EOL

    EOL  shift, and go to state 28


State 17

   15 expression: application .

    $default  reduce using rule 15 (expression)


State 18

   16 expression: value .

    $default  reduce using rule 16 (expression)


State 19

   24 value: LPAR expression . RPAR

    RPAR  shift, and go to state 29


State 20

   23 value: NAME .

    $default  reduce using rule 23 (value)


State 21

   17 application: NAME values .  [EOL, COL, RPAR]
   19 values: values . value
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   24      | . LPAR expression RPAR

    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 20
    STRING  shift, and go to state 9

    $default  reduce using rule 17 (application)

    value  go to state 30


State 22

   18 values: value .

    $default  reduce using rule 18 (values)


State 23

    7 statement: PASS EOL .

    $default  reduce using rule 7 (statement)


State 24

   11 names: NAME .

    $default  reduce using rule 11 (names)


State 25

    9 head: DEF names .  [COL]
   12 names: names . NAME

    NAME  shift, and go to state 31

    $default  reduce using rule 9 (head)


State 26

   10 head: IF expression .

    $default  reduce using rule 10 (head)


State 27

    4 statement: . EOL
    5          | . block
    6          | . expression EOL
    7          | . PASS EOL
    8 block: . head COL body
    8      | head COL . body
    9 head: . DEF names
   10     | . IF expression
   13 body: . statement
   14     | . EOL INDENT statements DEDENT
   15 expression: . application
   16           | . value
   17 application: . NAME values
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   24      | . LPAR expression RPAR

    EOL     shift, and go to state 32
    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9
    PASS    shift, and go to state 10
    DEF     shift, and go to state 11
    IF      shift, and go to state 12

    statement    go to state 33
    block        go to state 14
    head         go to state 15
    body         go to state 34
    expression   go to state 16
    application  go to state 17
    value        go to state 18


State 28

    6 statement: expression EOL .

    $default  reduce using rule 6 (statement)


State 29

   24 value: LPAR expression RPAR .

    $default  reduce using rule 24 (value)


State 30

   19 values: values value .

    $default  reduce using rule 19 (values)


State 31

   12 names: names NAME .

    $default  reduce using rule 12 (names)


State 32

    4 statement: EOL .  [$end, DEDENT, EOL, LPAR, INT, FLOAT, NAME, STRING, PASS, DEF, IF]
   14 body: EOL . INDENT statements DEDENT

    INDENT  shift, and go to state 35

    $default  reduce using rule 4 (statement)


State 33

   13 body: statement .

    $default  reduce using rule 13 (body)


State 34

    8 block: head COL body .

    $default  reduce using rule 8 (block)


State 35

    2 statements: . %empty
    3           | . statements statement
   14 body: EOL INDENT . statements DEDENT

    $default  reduce using rule 2 (statements)

    statements  go to state 36


State 36

    3 statements: statements . statement
    4 statement: . EOL
    5          | . block
    6          | . expression EOL
    7          | . PASS EOL
    8 block: . head COL body
    9 head: . DEF names
   10     | . IF expression
   14 body: EOL INDENT statements . DEDENT
   15 expression: . application
   16           | . value
   17 application: . NAME values
   20 value: . INT
   21      | . FLOAT
   22      | . STRING
   23      | . NAME
   24      | . LPAR expression RPAR

    DEDENT  shift, and go to state 37
    EOL     shift, and go to state 4
    LPAR    shift, and go to state 5
    INT     shift, and go to state 6
    FLOAT   shift, and go to state 7
    NAME    shift, and go to state 8
    STRING  shift, and go to state 9
    PASS    shift, and go to state 10
    DEF     shift, and go to state 11
    IF      shift, and go to state 12

    statement    go to state 13
    block        go to state 14
    head         go to state 15
    expression   go to state 16
    application  go to state 17
    value        go to state 18


State 37

   14 body: EOL INDENT statements DEDENT .

    $default  reduce using rule 14 (body)
